<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Quangmire's Dev Blog</title>
 <link href="http://quangmire.github.io/atom.xml" rel="self"/>
 <link href="http://quangmire.github.io/"/>
 <updated>2016-02-17T03:25:40-06:00</updated>
 <id>quangmire.github.io</id>
 <author>
   <name>Quang Duong</name>
   <email></email>
 </author>

 
 <entry>
   <title>First Semester Done Part 1!</title>
   <link href="http://quangmire.github.io/blog/First-Semester-Done"/>
   <updated>2016-02-08T20:30:00-06:00</updated>
   <id>quangmire.github.io/blog/First-Semester-Done</id>
   <content type="html">&lt;p&gt;Greetings!&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been meaning to write this for awhile, but I just never got around to over
the (very appreciated) winter break. The entirety of my first fall semester was
not only enlightening, but also packed with endless projects and assignments as
expected. I wouldn&amp;#39;t have it any other way.&lt;/p&gt;

&lt;p&gt;The first day was absolutely insane. There were far more people wandering the
streets than I have ever seen in any given space (although much to my chagrin
this dwindled by the end of the week). Furthermore, a large portion of one of 
the main roads was filled with hundreds of student organizations, facilitating
the illusion of a bustling street (which it was). Throughout this first week,
the one distinct thing I can remember is that there was free food everywhere I
looked and I voraciously ate it all.&lt;/p&gt;

&lt;p&gt;In my classes themselves, the assignments given in my sole programming course,
Data Structures, proved not too difficult in any regard, but the style and
rigor in which we had to complete them made each very challenging. For each
one, we were required to verbalize our work in a report and to write extensive
testing code to verify the internal workings of the program (in addition to the
code actually doing what it was intended to do). I won&amp;#39;t go into the details of
the assignments themselves (in honor of the next generation), despite some of 
the results of the first being visible in the previous blog post, but I do want
to say that they were truly diverse and quite fun to implement.&lt;/p&gt;

&lt;p&gt;The other main classes I took this semester, Discrete Mathematics and Vector
Calculus, had a much lighter workload, albeit a larger learning curve to the
knowledge being presented. While vector cal was mainly just a multi-dimensional
extension to the calculus that I&amp;#39;ve learned before, discrete math was a whole
new animal that I was not accustomed to with all its proofs and tangentially
related number/graph theorems. I&amp;#39;d be drastically selling short by saying that
everything could be illustrated as a few steps from point A to point B, but
once you got the hang of it, you could &lt;span class=&quot;pic&quot; w=&quot;300&quot; h=&quot;225&quot;&gt;
&lt;a href=&quot;/public/images/memes/see_the_ending.jpg&quot;&gt;see the solution&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;My two remaining classes, Introduction to Ancient Greece and The Pursuit of 
Happiness in Shakespeare, were initially taken to fulfill basic core 
requirements, but they proved to be a source of endlessly interesting 
information. The Greece class exposed me to different types of ancient 
architecture and the standard epics of Homer, but I most enjoyed reading 
excerpts from Aristophanes, a fantastic comedian, who constantly ridiculed the 
serious tragedians and the &amp;quot;faultless&amp;quot; politicians of Athens. Imagine an 
ancient Greek rendition of Stephen Colbert or John Stewart (now sorrowfully, 
but not inadequately replaced with Trevor Noah). Shakespeare on the other hand
let me appreciate what I never thought I would...his plays. The lesser known
comedies were a myriad of social satire and biting wit that it so worthwhile.
In particular, the &amp;quot;misogynistic&amp;quot; &lt;em&gt;Taming of the Shrew&lt;/em&gt; demonstrated a 
hysterical, but nonetheless valuable commentary on how women were treated at
the time (which links to Euripides obsession with women in his plays).&lt;/p&gt;

&lt;p&gt;To be later continued in Part 2&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CS314H prog1 Images</title>
   <link href="http://quangmire.github.io/cs314hprog1"/>
   <updated>2015-09-04T10:15:00-05:00</updated>
   <id>quangmire.github.io/CS314H-prog1-Images</id>
   <content type="html">&lt;p&gt;From left to right, the original image, 16 bit, and 8 bit editions of the great Calvin Lin and
some with a whole bunch of filters on it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/cs314h/prog1/lin.jpg&quot; alt=&quot;The Great Calvin Lin&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/lin16.jpg&quot; alt=&quot;16 bit Calvin Lin&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/lin8.jpg&quot; alt=&quot;8 bit Calvin Lin&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/lin8-1.jpg&quot; alt=&quot;8 bit Calvin Lin #2&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/lin16-1.jpg&quot; alt=&quot;16 bit Calvin Lin #2&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/lin16-2.jpg&quot; alt=&quot;16 bit Calvin Lin #3&quot;&gt;&lt;/p&gt;

&lt;p&gt;Who doesn&amp;#39;t love bacon?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/cs314h/prog1/bacon.jpg&quot; alt=&quot;BACONNN&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/bacon16.jpg&quot; alt=&quot;16 bit BACONNN&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/bacon8.jpg&quot; alt=&quot;8 bit BACONNN&quot;&gt;&lt;/p&gt;

&lt;p&gt;Mountain ranges rearranged.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/cs314h/prog1/mountain.jpg&quot; alt=&quot;Original Range&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/mountain16.jpg&quot; alt=&quot;16 bit Range&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/cs314h/prog1/mountain8.jpg&quot; alt=&quot;8 bit Range&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/mountain8-1.jpg&quot; alt=&quot;Second 8 bit Range&quot;&gt;&lt;/p&gt;

&lt;p&gt;Skylines undefined.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/cs314h/prog1/skyline.jpg&quot; alt=&quot;Original Skyline&quot;&gt;
&lt;img src=&quot;/public/images/cs314h/prog1/skyline16.jpg&quot; alt=&quot;Plagiarized Skyline&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Website is Shaping Up</title>
   <link href="http://quangmire.github.io/blog/Website-is-Shaping-Up"/>
   <updated>2015-07-05T17:03:00-05:00</updated>
   <id>quangmire.github.io/blog/Website-is-Shaping-Up</id>
   <content type="html">&lt;p&gt;After browsing the Internet (recommended way for people as inexperienced as yours truly to learn) for some time,
I decided to implement tags and an archive to hold all my posts. After toiling endlessly, witness the fruit of my
labor.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-takes a deep breath-&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Tag System&lt;/h2&gt;

&lt;p&gt;The tagging system is taken straight from this &lt;a href=&quot;http://charliepark.org/tags-in-jekyll/&quot;&gt;blog post&lt;/a&gt; and is very simple
to install. All you have to do is create a &lt;code&gt;_plugins&lt;/code&gt; folder in the root of your &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;
directory. Inside it place a ruby file with the source code provided in the blog post. In addition, you have to create
a file inside the &lt;code&gt;_layouts&lt;/code&gt; directory called &lt;code&gt;tag_index.html&lt;/code&gt; and fill it with the html and css necessary to correctly
render a page that will hold all the posts of a certain tag.&lt;/p&gt;

&lt;h2&gt;Archives&lt;/h2&gt;

&lt;p&gt;Using Jekyll&amp;#39;s built in loops, I looped through all the posts and embedded them all on the page.
&lt;div class=&quot;code&quot;&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;site.posts&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // Insert content here. Mainly the &amp;#39;post.title&amp;#39;, &amp;#39;post.content&amp;#39;,  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // and &amp;#39;post.summary&amp;#39; variables.  &lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;/div&gt;
For the &lt;code&gt;tag_index.html&lt;/code&gt; file, I used the same format except I additionally checked if the tag matched for every post.
&lt;div class=&quot;code&quot;&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;post.tags&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;page.tag&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // Insert content here. Mainly the &amp;#39;post.title&amp;#39;, &amp;#39;post.content&amp;#39;,  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    // and &amp;#39;post.summary&amp;#39; variables.  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Salutations!</title>
   <link href="http://quangmire.github.io/blog/Saluations!"/>
   <updated>2015-07-04T16:11:00-05:00</updated>
   <id>quangmire.github.io/blog/Saluations!</id>
   <content type="html">&lt;p&gt;&lt;em&gt;-shakes hand with mysterious reader while wearing a hearty smile-&lt;/em&gt;&lt;br&gt;
This marks the beginning of my dev blog. I&amp;#39;ll try to consistently post updates to all the
projects I&amp;#39;m working on here with screenshots and some (likely flawed) technical explanations.
I already have a few game and application ideas to throw around, so look forward to some soon to
come excitement! Also, Happy 4th of July (or National Traitors Day to any readers claiming ancestry
to the British Empires).&lt;br&gt;
&lt;em&gt;-tips hat-&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
